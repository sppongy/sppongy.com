version: "3.8"
include:
  - frontend.yaml
  - media.yaml
  
services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: ${vaultwardenName}
    restart: ${restart}
    environment:
      - DOMAIN=${vaultwardenURL}
      - PUSH_ENABLED=true
      - PUSH_INSTALLATION_ID=/run/secrets/vaultID
      - PUSH_INSTALLATION_KEY=/run/secrets/vaultKey
    ports:
      - ${vaultwardenPort}
    volumes:
      - ${data}/vaultwarden:/data
  # Reverse proxy
  nginxpm:
    image: jc21/nginx-proxy-manager:latest
    container_name: ${nginxpmName}
    restart: ${restart}
    ports:
      - ${http}
      - ${https}
      - ${nginxpmPort}
    volumes:
      - ${data}/nginxpm:/data
      - ${data}/letsencrypt:/etc/letsencrypt
      - ${data}/www:/data/www
  # Authentication
  authelia:
    container_name: authelia
    image: authelia/authelia
    volumes:
      - ${config}/authelia:/config
    ports:
      - 9091:9091
    restart: unless-stopped
    healthcheck:
      disable: true
    secrets: [JWT_SECRET, SESSION_SECRET, STORAGE_ENCRYPTION_KEY]  
    environment:
      AUTHELIA_JWT_SECRET_FILE: /run/secrets/JWT_SECRET
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/SESSION_SECRET
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /run/secrets/STORAGE_ENCRYPTION_KEY
    depends_on:
      - redis
  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - ${data}/redis:/data
    expose:
      - 6379
    restart: unless-stopped
    environment:
      - TZ=${TZ}
  # Logging
  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: ${restart}
    volumes:
      - ${data}/loki:/etc/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: ${restart}
    volumes:
      - /var/log:/var/log
      - ${data}/promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yml
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: ${restart}
    volumes:
      - ${data}/grafana:/var/lib/grafana
    ports:
      - "3001:3000"
    user: "1000"
  # Homepage
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: ${homepageName}
    restart: ${restart}
    ports:
      - ${homepagePort}
    volumes:
      - ${config}/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro

secrets:
  JWT_SECRET:
    file: ./secrets/JWT_SECRET
  SESSION_SECRET:
    file: ./secrets/SESSION_SECRET 
  STORAGE_ENCRYPTION_KEY:
    file: ./secrets/STORAGE_ENCRYPTION_KEY
  wguiPassword:
    file: ./secrets/wgui
  doplarrToken:
    file: ./secrets/doplarr
  redbotToken:
    file: ./secrets/redbot
  sonarrAPI:
    file: ./secrets/sonarr
  radarrAPI:
    file: ./secrets/radarr
  vaultID:
    file: ./secrets/vaultID
  vaultKey:
    file: ./secrets/vaultKey
        
